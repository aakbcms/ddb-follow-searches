openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Follow searches'
  license:
    name: 'GNU General Public License v3.0'
    url: 'https://www.gnu.org/licenses/gpl-3.0.html'

tags:
  - name: 'Migrate'
    description: Data migration
  - name: 'Search'
security:
  - BearerAuth: []
paths:
  /list/{listName}:
    get:
      operationId: getSearches
      tags:
        - Search
      description: 'Get all the users searches.'
      parameters:
        - $ref: '#/components/parameters/listName'
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: 'The page of the result set. Pages are numbered from 1 and defaults to 1. Has no effect if size is not set.'
          example: 3
        - in: query
          name: size
          schema:
            type: integer
            minimum: 1
          description: 'The number of results per page. If not supplied, return the full list.'
          example: 10
      responses:
        200:
          description: 'The search data is returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Searches'
        default:
          description: 'Unspecified error.'

  /list/{listName}/add:
    post:
      operationId: addSearch
      tags:
        - Search
      description: 'Add search to the list.'
      requestBody:
        $ref: '#/components/requestBodies/addSearch'
      parameters:
        - $ref: '#/components/parameters/listName'
      responses:
        201:
          description: 'The search was successfully added to the list.'
        default:
          description: 'Unspecified error.'

  /list/{listName}/{searchId}:
    get:
      operationId: checkListMaterial
      tags:
        - Search
      description: 'Get the search results for a specific search.'
      parameters:
        - $ref: '#/components/parameters/listName'
        - $ref: '#/components/parameters/searchId'
      responses:
        200:
          description: 'The search with the specified ID exists.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
        404:
          description: 'The search does not exist.'
        default:
          description: 'Unspecified error.'
    delete:
      operationId: deleteSearch
      tags:
        - Search
      description: 'Delete search from list.'
      parameters:
        - $ref: '#/components/parameters/listName'
        - $ref: '#/components/parameters/searchId'
      responses:
        204:
          description: 'Successfully removed.'
        404:
          description: 'Unknown search.'
        default:
          description: 'Unspecified error.'
  /migrate/{legacyUserId}:
    put:
      operationId: migrateList
      tags:
        - Migrate
      description: 'Migrate searches for the legacy user identifier to current user.'
      parameters:
        - $ref: '#/components/parameters/legacyUserId'
      responses:
        204:
          description: 'Successfully migrated.'
        default:
          description: 'Unspecified error.'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  parameters:
    listName:
      name: 'listName'
      in: 'path'
      description: 'The name of the list containing searches.'
      required: true
      example: 'default'
      schema:
        $ref: '#/components/schemas/ListId'
    searchId:
      name: 'searchId'
      in: 'path'
      description: 'The identifier of the search.'
      required: true
      example: 42
      schema:
        $ref: '#/components/schemas/SearchId'
    legacyUserId:
      name: 'legacyUserId'
      in: 'path'
      description: 'Legacy user identifier of a migrated search.'
      required: true
      example: '29A10F616FE6CA5C6E06EBF507A9FDC5BB89F8EBCF65726BEAC61C646854E83856D3B1D46BE4696EDCFB3C9F57EEBB6941D8654BC1F4B514D6217141AEA1653C'
      schema:
        $ref: '#/components/schemas/LegacyUserId'
  requestBodies:
    addSearch:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Search'

  schemas:
    ListId:
      description: List identifier. Currently only 'default'
      type: string
      example: 'default'
    SearchId:
      description: 'Search identifier'
      type: string
      example: 42
    Search:
      description: 'Search definition.'
      type: object
      additionalProperties: false
      required:
        - title
        - query
      properties:
        title:
          $ref: '#/components/schemas/SearchTitle'
        query:
          $ref: '#/components/schemas/SearchQuery'
    Searches:
      type: array
      items:
        $ref: '#/components/schemas/SearchInformation'
    SearchResult:
      type: object
      additionalProperties: false
      required:
        - materials
      properties:
        materials:
          $ref: '#/components/schemas/Material'
    SearchTitle:
      description: 'Title of search'
      type: string
      example: 'Harry Potter stuff'
    SearchQuery:
      description: 'A search query'
      type: string
      example: 'harry potter'
    SearchInformation:
      description: 'Information about search'
      type: object
      additionalProperties:
        false
      properties:
        search:
          $ref: '#/components/schemas/SearchQuery'
        new_count:
          type: integer
    Material:
      description: 'A material'
      type: object
      required:
        - pid
      additionalProperties: true
      properties:
        pid:
          type: string
    LegacyUserId:
      description: 'Legacy user identifier.'
      type: string
      example: '29A10F616FE6CA5C6E06EBF507A9FDC5BB89F8EBCF65726BEAC61C646854E83856D3B1D46BE4696EDCFB3C9F57EEBB6941D8654BC1F4B514D6217141AEA1653C'
