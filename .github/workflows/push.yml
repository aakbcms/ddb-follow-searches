on: push
name: Build, test and deploy
jobs:
  check_codestyle:
    name: Codestyle
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Composer install
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Check codestyle
      uses: docker://php:7.3-alpine
      with:
        entrypoint: vendor/bin/phpcs

  static_code_analysis:
    name: Static Code Analysis
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Composer install
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Static code analysis
      uses: docker://php:7.3-alpine
      with:
        entrypoint: php
        args: -d memory_limit=1G vendor/bin/phpstan analyse .

  unit_tests:
    name: Unit tests
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Composer install
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Unit tests
      uses: docker://php:7.3-alpine
      with:
        entrypoint: phpdbg
        args: -qrr ./vendor/bin/phpunit --coverage-clover=coverage/unit.xml
    - name: Unit Codecov
      uses: ./.github/actions/codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        args: -F Unit -f coverage/unit.xml

  behaviour_tests:
    name: Behaviour tests
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Composer install
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Behaviour tests
      uses: docker://php:7.3-alpine
      with:
        entrypoint: phpdbg
        args: -qrr vendor/bin/behat
    - name: Behaviour test coverage
      uses: docker://php:7.3-alpine
      with:
        entrypoint: phpdbg
        args: -qrr vendor/bin/phpcov merge --clover=coverage/behat.xml coverage/default.cov
    - name: Behaviour Codecov
      uses: ./.github/actions/codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        args: -F Behaviour -f coverage/behat.xml

  specification_lint:
    name: Specification linting
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Lint specification
      uses: docker://wework/speccy
      with:
        args: lint follow-searches.yaml

  specification_tests:
    name: Specification tests
    if: '!github.event.deleted'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Composer install
      uses: MilesChou/composer-action@master
      with:
        args: install
    - name: Specification tests
      uses: ./.github/actions/spec-test
      env:
        ADGANGSPLATFORMEN_DRIVER: testing
        APP_DEBUG: "true"
        APP_ENV: testing
        DB_CONNECTION: sqlite
        DB_DATABASE: /tmp/db.sqlite
      with:
        entrypoint: dredd
        args: --loglevel=error

  deploy:
    name: Deploy
    if: (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') && !github.event.deleted
    needs:
      - check_codestyle
      - static_code_analysis
      - unit_tests
      - behaviour_tests
      - specification_lint
      - specification_tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install envoy
      run: composer global require "laravel/envoy"
    - name: Deployment to server
      env:
        SSH_KEY: ${{ secrets.SSH_KEY }}
        PROD: ${{ (github.ref == 'refs/heads/master') }}
      run: |
        mkdir -p ~/.ssh && echo "${SSH_KEY}" >> ~/.ssh/id_rsa
        chmod 400 ~/.ssh/id_rsa
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        ssh-keyscan -p 222 followsearches.dandigbib.org > ~/.ssh/known_hosts
        if [ "$PROD" == "true" ]; then
          ~/.composer/vendor/bin/envoy run deploy --env=prod
        else
          ~/.composer/vendor/bin/envoy run deploy --env=stage
        fi
